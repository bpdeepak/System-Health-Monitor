// Jenkinsfile
pipeline {
    agent any // Jenkins will run steps directly on the host machine

    environment {
        DOCKERHUB_USER = 'bpdeepak' // Your Docker Hub username
        IMAGE_TAG = "${env.BUILD_NUMBER}" // Unique tag for each build
        GITHUB_CRED_ID = 'github-creds' // Jenkins credential ID for GitHub
        DOCKERHUB_CRED_ID = 'dockerhub-creds' // Jenkins credential ID for Docker Hub
        MONGO_URI='mongodb://localhost:27017/monitoring_test'
        JWT_SECRET='6c43ab5946eba06a5ca3a964a5a729d8d5da6da47ac86a67ae20bd352e4d73a00d496613834698badcfe69fce84366880a038257eec8122226122a7caed8533a'
        MONGO_TEST_URI='mongodb://localhost:27017/monitoring_test'
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    cleanWs() // Clean Jenkins workspace
                    git branch: 'dev', // Make sure this matches your branch
                        credentialsId: env.GITHUB_CRED_ID,
                        url: 'https://github.com/bpdeepak/System-Health-Monitor.git'
                }
            }
        }

        stage('Backend Build & Test') {
            steps {
                dir('backend') {
                    sh 'npm install'
                    sh 'echo "MONGO_TEST_URI in Jenkins pipeline: $MONGO_TEST_URI"'
                    sh 'rm -f .env'
                    sh 'npm test'
                }
            }
        }

        stage('Frontend Build & Test') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm test'
                    sh 'npm run build' // Build frontend assets
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                // These commands will use the Docker Desktop installation on your system
                sh "docker build -t ${env.DOCKERHUB_USER}/system-health-monitor-backend:${env.IMAGE_TAG} ./backend"
                sh "docker build -t ${env.DOCKERHUB_USER}/system-health-monitor-frontend:${env.IMAGE_TAG} ./frontend"
                sh "docker build -t ${env.DOCKERHUB_USER}/system-health-monitor-agent:${env.IMAGE_TAG} ./agent"
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CRED_ID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'echo $PASSWORD | docker login -u $USERNAME --password-stdin'
                    sh "docker push ${env.DOCKERHUB_USER}/system-health-monitor-backend:${env.IMAGE_TAG}"
                    sh "docker push ${env.DOCKERHUB_USER}/system-health-monitor-frontend:${env.IMAGE_TAG}"
                    sh "docker push ${env.DOCKERHUB_USER}/system-health-monitor-agent:${env.IMAGE_TAG}"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline finished successfully!'
        }
        failure {
            echo 'Pipeline failed! Check logs for errors.'
        }
    }
}